- hosts: inreset
  strategy: free
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: reset | stop services
      service:
        name: "{{ item }}"
        state: stopped
      with_items:
        - kubelet.service
        - cri-dockerd.service
        - cri-dockerd.socket
      failed_when: false
      tags:
        - services

    - name: reset | remove services
      file:
        path: "/etc/systemd/system/{{ item }}"
        state: absent
      with_items:
        - kubelet.service
        - cri-dockerd.service
        - cri-dockerd.socket
        - calico-node.service
        - crio.service.d/http-proxy.conf
        - k8s-certs-renew.service
        - k8s-certs-renew.timer
      register: services_removed
      tags:
        - services
        - containerd
        - crio


    - name: reset | systemctl daemon-reload  # noqa 503
      systemd:
        daemon_reload: true
      when: services_removed.changed

    - name: reset | gather mounted kubelet dirs  # noqa 301
      shell: set -o pipefail && mount | grep /var/lib/kubelet/ | awk '{print $3}' | tac
      args:
        executable: /bin/bash
        warn: false
      check_mode: no
      register: mounted_dirs
      failed_when: false
      tags:
        - mounts

    - name: reset | check if crictl is present
      stat:
        path: "{{ bin_dir }}/crictl"
        get_attributes: no
        get_checksum: no
        get_mime: no
      register: crictl

    - name: reset | stop all cri containers
      shell: "set -o pipefail && {{ bin_dir }}/crictl ps -q | xargs -r {{ bin_dir }}/crictl -t 60s stop"
      args:
        executable: /bin/bash
      register: remove_all_cri_containers
      retries: 5
      until: remove_all_cri_containers.rc == 0
      delay: 5
      tags:
        - crio
        - containerd
      when:
        - crictl.stat.exists
      ignore_errors: true
      # noqa ignore-errors
    - name: reset | force remove all cri containers
      command: "{{ bin_dir }}/crictl rm -a -f"
      register: remove_all_cri_containers
      retries: 5
      until: remove_all_cri_containers.rc == 0
      delay: 5
      tags:
        - crio
        - containerd
      when:
        - crictl.stat.exists
      ignore_errors: true  # noqa ignore-errors

    - name: reset | stop all cri pods
      shell: "set -o pipefail && {{ bin_dir }}/crictl pods -q | xargs -r {{ bin_dir }}/crictl -t 60s stopp"
      args:
        executable: /bin/bash
      register: remove_all_cri_containers
      retries: 5
      until: remove_all_cri_containers.rc == 0
      delay: 5
      tags: [ containerd ]
      when:
        - crictl.stat.exists
      ignore_errors: true  # noqa ignore-errors

    - block:
        - name: reset | force remove all cri pods
          command: "{{ bin_dir }}/crictl rmp -a -f"
          register: remove_all_cri_containers
          retries: 5
          until: remove_all_cri_containers.rc == 0
          delay: 5
          tags: [ containerd ]
          when:
            - crictl.stat.exists

      rescue:
        - name: reset | force remove all cri pods (rescue)
          shell: "ip netns list | cut -d' ' -f 1 | xargs -n1 ip netns delete && {{ bin_dir }}/crictl rmp -a -f"
          ignore_errors: true  # noqa ignore-errors
          changed_when: true

    - name: reset | unmount kubelet dirs  # noqa 301
      command: umount -f {{ item }}
      with_items: "{{ mounted_dirs.stdout_lines }}"
      register: umount_dir
      when: mounted_dirs
      retries: 4
      until: umount_dir.rc == 0
      delay: 5
      tags:
        - mounts

    - name: reset | Check whether /var/lib/kubelet directory exists
      stat:
        path: /var/lib/kubelet
        get_attributes: no
        get_checksum: no
        get_mime: no
      register: var_lib_kubelet_directory

    - name: reset | Find files/dirs with immutable flag in /var/lib/kubelet
      command: lsattr -laR /var/lib/kubelet
      become: true
      register: var_lib_kubelet_files_dirs_w_attrs
      changed_when: false
      no_log: true
      when: var_lib_kubelet_directory.stat.exists

    - name: reset | Remove immutable flag from files/dirs in /var/lib/kubelet
      file:
        path: "{{ filedir_path }}"
        state: touch
        attributes: "-i"
      loop: "{{ var_lib_kubelet_files_dirs_w_attrs.stdout_lines|select('search', 'Immutable')|list }}"
      loop_control:
        loop_var: file_dir_line
        label: "{{ filedir_path }}"
      vars:
        filedir_path: "{{ file_dir_line.split(' ')[0] }}"
      when: var_lib_kubelet_directory.stat.exists

    - name: reset | delete some files and directories
      file:
        path: "{{ item }}"
        state: absent
      with_items:
          - "{{ kube_config_dir }}"
          - /var/lib/kubelet
          - /run/kubernetes
          - /usr/local/share/ca-certificates/kube-ca.crt
          - /etc/ssl/certs/kube-ca.pem
          - /etc/pki/ca-trust/source/anchors/kube-ca.crt
      ignore_errors: true  # noqa ignore-errors
      tags:
        - files
