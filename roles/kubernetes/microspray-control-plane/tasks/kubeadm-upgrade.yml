---
- name: kubeadm | Check api is up
  uri:
    url: "https://{{ ip_vlan | default(ip | default(fallback_ips[inventory_hostname])) }}:{{ kube_apiserver_port }}/healthz"
    validate_certs: false
  when: inventory_hostname == groups['kube_control_plane']
  register: _result
  retries: 60
  delay: 5
  until: _result.status == 200

- name: Kubeadm | Upgrade first control plane node
  command: >-
    timeout -k 600s 600s
    {{ bin_dir }}/kubeadm
    upgrade apply -y {{ kube_version }}
    --config kubeadm-config.yaml
    --ignore-preflight-errors={{ kubeadm_ignore_preflight_errors | join(',') }}
  register: kubeadm_upgrade
  # Retry is because upload config sometimes fails
  retries: 3
  until: kubeadm_upgrade.rc == 0
  when: inventory_hostname == first_kube_control_plane
  failed_when: kubeadm_upgrade.rc != 0 and "field is immutable" not in kubeadm_upgrade.stderr
  environment:
    PATH: "{{ bin_dir }}:{{ ansible_env.PATH }}"
  notify: Control plane | restart kubelet

- name: Kubeadm | Upgrade other control plane nodes
  command: >-
    timeout -k 600s 600s
    {{ bin_dir }}/kubeadm
    upgrade node --config kubeadm-config.yaml
    --ignore-preflight-errors={{ kubeadm_ignore_preflight_errors | join(',') }}
  register: kubeadm_upgrade
  # Retry is because upload config sometimes fails
  retries: 3
  until: kubeadm_upgrade.rc == 0
  when: inventory_hostname != first_kube_control_plane
  failed_when: kubeadm_upgrade.rc != 0 and "field is immutable" not in kubeadm_upgrade.stderr
  environment:
    PATH: "{{ bin_dir }}:{{ ansible_env.PATH }}"
  notify: Control plane | restart kubelet

- name: Kubeadm | Remove binding to anonymous user
  command: "{{ kubectl }} -n kube-public delete rolebinding kubeadm:bootstrap-signer-clusterinfo --ignore-not-found"
  when: remove_anonymous_access

- name: Kubeadm | clean kubectl cache to refresh api types
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /root/.kube/cache
    - /root/.kube/http-cache
